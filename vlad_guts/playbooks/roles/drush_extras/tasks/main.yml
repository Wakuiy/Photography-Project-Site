---

# Installed Drush version

- name: Get installed Drush version number
  shell: drush --version --pipe
  register: vlad_drush_installed_version
  changed_when: false

- name: Establish installed Drush major version number
  set_fact:
    vlad_drush_installed_version_major: "{{ vlad_drush_installed_version.stdout | truncate(1, true, '') | int }}"


# Directories

- name: Prepare vlad_aux subdirectories
  file:
    path: /var/www/site/vlad_aux/{{ item }}
    state: directory
    mode: 0777
  become: true
  with_items:
    - drush_backups
    - db_io/drush_dumps

- name: Prepare user .drush directory
  file:
    path: /home/{{ user }}/.drush
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    recurse: yes


# drush init (drush versions >= 8)

- name: Run drush init if installed Drush version >= 8
  shell: drush init -y
  when: "{{ vlad_drush_installed_version_major | version_compare('8', '>=') }}"

# drush bash completion and prompt (drush versions < 8)

- name: Enable bash completion and prompt for Drush version < 8
  command: >
    cp -T {{ drush_install_path }}/drush.complete.sh /etc/bash_completion.d/drush
    creates=/etc/bash_completion.d/drush
  when: "{{ vlad_drush_installed_version_major | version_compare('8', '<') }}"
  become: true

# .drush_bashrc (drush versions < 8)

- name: Copy example .drush_bashrc file to user directory
  command: >
    cp {{ drush_install_path }}/examples/example.bashrc /home/{{ user }}/.drush_bashrc
    creates=/home/{{ user }}/.drush_bashrc
  when: "{{ vlad_drush_installed_version_major | version_compare('8', '<') }}"

- name: Source user .drush_bashrc from .bashrc
  lineinfile:
    dest: /home/{{ user }}/.bashrc
    line: ". ~/.drush_bashrc"
  when: "{{ vlad_drush_installed_version_major | version_compare('8', '<') }}"


# drushrc.php

- name: Add custom drushrc.php file
  template:
    src: drushrc.php.j2
    dest: /home/{{ user }}/.drush/drushrc.php
  notify: drush cc drush


# Drush commands

# @TODO This task needs to be aware of which major version of Drupal we'll be using
# (it could be run outside of the context of an existing codebase).
- name: Download additional Drush commands
  command: drush dl {{ item.name }}{{ item.version }} --destination=/home/{{ user }}/.drush/commands/{{ item.name }} --yes
    creates=/home/{{ user }}/.drush/commands/{{ item.name }}
  with_items: drush_install_commands
  notify: drush cc drush


# Drush make

- include: drush_make.yml
  when: drush_make_file != ""
  tags: drush_make
